"""
Telegram-–±–æ—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–µ—Ä–æ—è—Ç–Ω—ã—Ö —ç—Ç–Ω–∏—á–Ω–æ—Å—Ç–µ–π/–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–µ–π –ø–æ –∏–º–µ–Ω–∏.

–ë–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç API nationalize.io –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ —Å—Ç—Ä–æ–∏—Ç
—Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.
"""

import matplotlib

matplotlib.use('Agg')  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—ç–∫–µ–Ω–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ GUI
import telebot
import requests
import pycountry
import matplotlib.pyplot as plt
from io import BytesIO

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
API_KEY = ''  # –ö–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ API nationalize.io
bot = telebot.TeleBot("")  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞

# –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
request_cache = {}

def get_country_name(country_code):
    """
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –≤ –µ—ë –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.

    Args:
        country_code (str): –î–≤—É—Ö–±—É–∫–≤–µ–Ω–Ω—ã–π –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'RU', 'US')

    Returns:
        str: –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ

    Examples:
        >>> get_country_name('RU')
        'Russian Federation'
        >>> get_country_name('XX')
        '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞ (XX)'
    """
    try:
        return pycountry.countries.get(alpha_2=country_code).name
    except (AttributeError, LookupError):
        return f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞ ({country_code})"


def create_bar_chart(countries_data):
    """
    –°–æ–∑–¥–∞–µ—Ç —Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–µ–π.

    Args:
        countries_data (list): –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Å—Ç—Ä–∞–Ω–∞—Ö:
            [{'country_id': 'RU', 'probability': 0.5}, ...]

    Returns:
        BytesIO: –ë—É—Ñ–µ—Ä —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≥—Ä–∞—Ñ–∏–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG
    """
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏
    country_names = [get_country_name(c['country_id']) for c in countries_data]
    probabilities = [c['probability'] * 100 for c in countries_data]

    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–≥—É—Ä—É –∏ –æ—Å–∏
    plt.figure(figsize=(10, 5))

    # –°—Ç—Ä–æ–∏–º —Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
    bars = plt.bar(country_names, probabilities, color='skyblue')

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
    plt.title('–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —ç—Ç–Ω–∏—á–Ω–æ—Å—Ç–µ–π/–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–µ–π')
    plt.ylabel('–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å (%)')
    plt.xticks(rotation=45)  # –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –∫–∞–∂–¥—ã–π —Å—Ç–æ–ª–±–µ—Ü
    for bar in bars:
        height = bar.get_height()
        plt.text(
            bar.get_x() + bar.get_width() / 2.,
            height,
            f'{height:.1f}%',
            ha='center',
            va='bottom'
        )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫ –≤ –±—É—Ñ–µ—Ä
    buf = BytesIO()
    plt.savefig(buf, format='png', bbox_inches='tight')
    plt.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∏–≥—É—Ä—É –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
    buf.seek(0)  # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ –Ω–∞—á–∞–ª–æ –±—É—Ñ–µ—Ä–∞

    return buf


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /start –∏ /help. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    welcome_message = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–º—è/—Ñ–∞–º–∏–ª–∏—é, –∏ —è –æ–ø—Ä–µ–¥–µ–ª—é 5 –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã—Ö —ç—Ç–Ω–∏—á–Ω–æ—Å—Ç–µ–π/–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–µ–π.\n\n"
        "–ü—Ä–∏–º–µ—Ä—ã –∏–º–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∞:\n"
        "‚Ä¢ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä\n"
        "‚Ä¢ Trump\n"
        "‚Ä¢ Kim\n"
        "‚Ä¢ Mohammed"
    )
    bot.reply_to(message, welcome_message)


@bot.message_handler(func=lambda message: True)
def handle_name(message):
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–º—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
    """
    name = message.text.strip()

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–æ–¥–∞
    if len(name) < 2:
        bot.reply_to(message, "‚ùå –ò–º—è(–§–∞–º–∏–ª–∏—è) –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞")
        return

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
        response = requests.get(
            "https://api.nationalize.io/",
            params={'name': name, 'api_key': API_KEY},
            timeout=15
        )
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏ HTTP

        # –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç API
        data = response.json()
        countries = data.get('country', [])

        if not countries:
            bot.reply_to(message, "üòû –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —ç—Ç–Ω–∏—á–Ω–æ—Å—Ç—å/–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å. –í–æ–∑–º–æ–∂–Ω–æ, –∏–º—è/—Ñ–∞–º–∏–ª–∏—è –ø—Ä–æ—Å—Ç–æ –æ—á–µ–Ω—å —Ä–µ–¥–∫–∞—è!")
            return

        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω—ã –ø–æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∏ –±–µ—Ä–µ–º —Ç–æ–ø-5
        top_countries = sorted(
            countries,
            key=lambda x: x['probability'],
            reverse=True
        )[:5]

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –≤—ã–≤–æ–¥–∞
        result = [
            f"{i}. {get_country_name(c['country_id'])} - {c['probability'] * 100:.1f}%"
            for i, c in enumerate(top_countries, 1)
        ]

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫—ç—à
        cache_key = f"{message.chat.id}-{name}"
        request_cache[cache_key] = top_countries  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ø-5

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∫–ª—é—á–æ–º –∫—ç—à–∞
        markup = telebot.types.InlineKeyboardMarkup()
        btn = telebot.types.InlineKeyboardButton(
            text="üìä –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–≥—Ä–∞–º–º–æ–π",
            callback_data=f"graph_{cache_key}"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á –∫—ç—à–∞
        )
        markup.add(btn)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            chat_id=message.chat.id,
            text=f"üéØ –¢–æ–ø-5 —ç—Ç–Ω–∏—á–Ω–æ—Å—Ç–µ–π/–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–µ–π –¥–ª—è {name}:\n" + "\n".join(result),
            reply_markup=markup
        )

    except requests.exceptions.RequestException as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–µ—Ç–∏ –∏ API
        bot.reply_to(message, f"‚ö†Ô∏è El problema - –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {str(e)}")
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—á–∏—Ö –æ—à–∏–±–æ–∫
        bot.reply_to(message, f"‚ö†Ô∏è El problema - –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")


@bot.callback_query_handler(func=lambda call: call.data.startswith('graph_'))
def send_graph(call):
    """
       –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫". –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∏–∞–≥—Ä–∞–º–º—É.
    """
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á –∫—ç—à–∞ –∏–∑ callback_data
    cache_key = call.data[6:]

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞
    top_countries = request_cache.get(cache_key)

    if not top_countries:
        bot.answer_callback_query(
            call.id,
            text="–î–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç",
            show_alert=True
        )
        return

    # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    del request_cache[cache_key]

    # –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫
    try:
        chart = create_bar_chart(top_countries)
        bot.send_photo(
            chat_id=call.message.chat.id,
            photo=chart,
            caption=f"üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è {cache_key.split('-')[1]}"  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –∏–∑ –∫–ª—é—á–∞
        )
    except Exception as e:
        bot.answer_callback_query(
            call.id,
            text=f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞: {str(e)}",
            show_alert=True
        )

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ...")
    bot.polling(none_stop=True)  # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º